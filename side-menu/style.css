*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
button{
    background: transparent;
    color: #ffffff;
    border: none;
    margin: 10px 10px;
    font-size: 1.2em;
    cursor: pointer;
}
button:focus{
    outline: none;
}
h2{
    margin: 12px 0;
}
ul{
    text-align: center;
    font-size: 1.3em;
    height: 100%;
    text-transform: capitalize;
    list-style: none;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}
li:hover{
    cursor: pointer; 
}
#wrapper{
    display: flex;
    flex-direction: column;
}
/* I made the nav-menu fixed because I didnt want it to move when the content scrolled, width is 250px by default but you can't see it because my content div is ontop (higher z-index), height is 100vh because i wanted it to be the same as the device height and not just some random height, I added a smooth transition back and forward with the transition property */
.nav--menu{
    position: fixed;
    width: 240px;
    left: 0;
    height: 100vh;
    background: pink;
    transition: 0.3s ease;
    -webkit-transition: 0.3s ease;
    -moz-transition: 0.3s ease;
    -ms-transition: 0.3s ease;
    -o-transition: 0.3s ease;
}

/* I keep the .nav--menu width at 250px that way the content will move on top of it, instead of the nav being squished with setting the width to 0 */

/* the class the content has by default */
.content.movedback{
    margin-left: 0;
}
/* class added within the javascript to move the content to the side by 250px */
.content.movedcontent{
    margin-left: 240px;
}
/* z-index is higher so that the content sides over the nav instead of under, overflow-y so that people can scroll to see more text if it gets larger */
.content{
    z-index: 2;
    display: flex;
    flex-direction: column;
    overflow-y: scroll;
    overflow-x: hidden;
    height: 100vh;
    background: #ccc;
    transition: margin-left 0.3s ease;
    -webkit-transition: margin-left 0.3s ease;
    -moz-transition: margin-left 0.3s ease;
    -ms-transition: margin-left 0.3s ease;
    -o-transition: margin-left 0.3s ease;
}
.content .text, .content .open--btn{
    padding: 20px 20px;
}
.content button{
    margin: 0;
}
.content .text{
    align-items: center;
    display: grid;
    grid-row-gap: 20px;
    grid-column-gap: 25px;
    grid-template-columns: 1fr 1fr;
}
.icons{

}